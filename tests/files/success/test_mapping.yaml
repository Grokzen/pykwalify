---
name: mapping1
desc: Most basic mapping validation
data:
  foo: bar
schema:
  type: map
  mapping:
    foo:
      type: str
---
name: mapping2
desc: Complex mapping that test several subtypes for each key
#
schema:
  type: map
  required: true
  mapping:
    name:
      type: str
      required: true
    email:
      type: str
      # This pattern value was modified from /@/ to .+@.+ to make it copmatible with python
      pattern: .+@.+
      required: True
    age:
      type: int
    blood:
      type: str
      enum:
        - A
        - B
        - O
        - AB
    # TODO: Date type is not yet implemented
    # birth:
    #   type: date
#
data:
  name: foo
  email: foo@mail.com
  age: 20
  blood: AB
  # birth:   1985-01-01
---
name: mapping3
desc: Test that mapping works inside a sequence
data:
  - foo: True
schema:
  type: seq
  sequence:
    - type: map
      mapping:
        foo:
          type: bool
---
name: mapping4
desc: Test that map inside seq inside map works
data:
  company: Kuwata lab.
  email: webmaster@kuwata-lab.com
  employees:
    - code: 101
      name: foo
      email: foo@kuwata-lab.com
    - code: 102
      name: bar
      email: bar@kuwata-lab.com
schema:
  type: map
  mapping:
    company:
      type: str
      required: True
    email:
      type: str
    employees:
      type: seq
      sequence:
        - type: map
          mapping:
            code:
              type: int
              required: True
            name:
              type: str
              required: True
            email:
              type: str
---
name: mapping5
desc: test allowempty option to mapping
data:
  datasources:
    test1: test1.py
    test2: test2.py
schema:
  type: map
  mapping:
    datasources:
      type: map
      allowempty: True
      mapping:
        test1:
          type: str
---
name: mapping6
desc: Test that regex keys works
data:
  mic:
    - input
    - foo
  mock:
    - True
    - False
schema:
  type: map
  matching-rule: "any"
  mapping:
    re;(mi.+):
      type: seq
      sequence:
        - type: str
    regex;(mo.+):
      type: seq
      sequence:
        - type: bool
---
name: mapping7
desc: Test that mapping name works
data:
  datasources: test1.py
schema:
  type: map
  mapping:
    datasources:
      type: str
---
name: mapping8
desc: Test that map shortcut works
data:
  datasources: test1.py
schema:
  type: map
  map:
    datasources:
      type: str
---
name: mapping9
desc: Test that you do not have to specify type map
data:
  streams: foobar
schema:
  mapping:
    streams:
      type: str
---
name: mapping10
desc: Test that you do not have to specify type map when map exists in schema
data:
  streams: foobar
schema:
  map:
    streams:
      type: str
